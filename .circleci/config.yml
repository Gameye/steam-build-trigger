version: 2

jobs:
  prepare-npm:
    docker: &docker_node
      - image: circleci/node:10
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - run: npm version $CIRCLE_TAG
      - restore_cache:
          key: npm-
      - run: npm install
      - run: npm install tap-junit
      - save_cache:
          key: npm-{{ .Revision }}
          paths: [ ~/.npm ]
      - persist_to_workspace:
          root: .
          paths: [ package.json, package-lock.json, node_modules, node, module, types ]

  lint:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: &attach_workspace
          at: .
      - run: npm run lint

  spec:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run: npm run spec-all | $(npm bin)/tap-junit --output "/tmp/test-results/spec"
      - store_test_results:
          path: /tmp/test-results

  push-image-latest:
    docker: &docker_buildpack
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker: &setup_remote_docker
          docker_layer_caching: false
      - checkout
      - attach_workspace: *attach_workspace
      - run: >
          docker login
          --username $DOCKER_USERNAME
          --password $DOCKER_PASSWORD
      - run: >
          docker build
          --tag gameye/$CIRCLE_PROJECT_REPONAME:latest
          .
      - run: docker push gameye/$CIRCLE_PROJECT_REPONAME:latest

  push-image:
    docker: &docker_buildpack
      - image: circleci/buildpack-deps
    steps:
      - setup_remote_docker: *setup_remote_docker
      - checkout
      - attach_workspace: *attach_workspace
      - run: >
          docker login
          --username $DOCKER_USERNAME
          --password $DOCKER_PASSWORD
      - run: >
          docker build
          --tag gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
          .
      - run: docker push gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

workflows:
  version: 2
  main:
    jobs:
      - prepare-npm:
          context: npm-authorized
          filters: &filters_all
            tags:
              only: /.*?/
      - lint: &test_job
          requires: [ prepare-npm ]
          filters: *filters_all
      - spec: *test_job

      - push-image-latest:
          context: docker-authorized
          requires: 
            - lint
            - spec
          filters:
            branches:
              only: master
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/

      - push-image:
          context: docker-authorized
          requires: 
            - lint
            - spec
          filters: &filters_prerelease
            branches:
              ignore: /.*?/
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/


