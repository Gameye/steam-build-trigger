version: 2

jobs:
  prepare-npm:
    docker: &docker_node
      - image: circleci/node:10
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - run: npm version $CIRCLE_TAG
      - run: npm install
      - run: npm install tap-junit
      - persist_to_workspace:
          root: .
          paths:
            [package.json, package-lock.json, node_modules, node, module, types]

  lint:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: &attach_workspace
          at: .
      - run: npm run lint

  test:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run: >
          docker login
          --username $DOCKER_USERNAME
          --password $DOCKER_PASSWORD
      - run:
          environment:
            NVM_DIR: /opt/circleci/.nvm
          command: |
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 12 && nvm alias default 12
            npm run coverage
      - store_artifacts:
          destination: report
          path: report

  push-image:
    docker: &docker_buildpack
      - image: circleci/buildpack-deps
    steps: &push_image_steps
      - setup_remote_docker: &setup_remote_docker
          docker_layer_caching: true
      - checkout
      - attach_workspace: *attach_workspace
      - run: >
          docker login
          --username $DOCKER_USERNAME
          --password $DOCKER_PASSWORD
      - run: >
          docker build
          --tag gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
          .
      - run: docker push gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

workflows:
  version: 2
  main:
    jobs:
      - prepare-npm:
          context: npm-authorized
          filters: &filters_all
            tags:
              only: /.*?/
      - lint: &test_job
          requires: [prepare-npm]
          filters: *filters_all
      - test:
          context: docker-authorized
          requires: [prepare-npm]
          filters: *filters_all

      - push-image:
          context: docker-authorized
          requires:
            - lint
            - test
          filters:
            branches:
              ignore: /.*?/
            tags:
              # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
              only: /^v\d+\.\d+\.\d+(\-.+)?$/
