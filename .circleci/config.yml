version: 2

jobs:
  prepare-npm:
    docker: &docker_node
      - image: circleci/node:10
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - run: npm version $CIRCLE_TAG
      - restore_cache:
          key: npm-
      - run: npm install
      - run: npm install tap-junit
      - save_cache:
          key: npm-{{ .Revision }}
          paths: [ ~/.npm ]
      - persist_to_workspace:
          root: .
          paths: [ package.json, package-lock.json, node_modules, node, module, types ]

  lint:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: &attach_workspace
          at: .
      - run: npm run lint

  spec:
    docker: *docker_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run: npm run spec-all | $(npm bin)/tap-junit --output "/tmp/test-results/spec"
      - store_test_results:
          path: /tmp/test-results

  push-image-latest:
    docker: &docker_buildpack
      - image: circleci/buildpack-deps
    steps: &push_image_steps
      - setup_remote_docker: &setup_remote_docker
          docker_layer_caching: true
      - checkout
      - attach_workspace: *attach_workspace
      - run: >
          docker login
          --username $DOCKER_USERNAME
          --password $DOCKER_PASSWORD
      - run: >
          docker build
          --tag gameye/$CIRCLE_PROJECT_REPONAME:latest
          .
      - run: docker push gameye/$CIRCLE_PROJECT_REPONAME:latest

  push-image:
    docker: &docker_buildpack
      - image: circleci/buildpack-deps
    steps: &push_image_steps
      - setup_remote_docker: &setup_remote_docker
          docker_layer_caching: true
      - checkout
      - attach_workspace: *attach_workspace
      - run: >
          docker login
          --username $DOCKER_USERNAME
          --password $DOCKER_PASSWORD
      - run: >
          docker build
          --tag gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG
          .
      - run: docker push gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

  update-cluster-region-internal:
    environment:
      AWS_DEFAULT_REGION: eu-west-1
      CLUSTER: region-internal
    docker: &docker_python
      - image: circleci/python:2.7
    steps: &update_cluster_steps
      - restore_cache: &restore_cache_pip
          key: pip-
      - run: pip install awscli --user
      - save_cache: &save_cache_pip
          key: pip-{{ .Revision }}
          paths: [ ~/.cache/pip ]

      - run: >
          sudo curl
          -o /usr/local/bin/kubectl
          https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/kubectl
      - run: >
          sudo chmod +x /usr/local/bin/kubectl
      
      - run: >
          sudo curl
          -o /usr/local/bin/aws-iam-authenticator
          https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator
      - run: >
          sudo chmod +x /usr/local/bin/aws-iam-authenticator
      
      - checkout
      - attach_workspace: *attach_workspace
      
      - run: >
          ~/.local/bin/aws eks update-kubeconfig --name region-internal      

      - run: kubectl apply -f kubernetes

      - run: >
          kubectl
          set image deployment/$CIRCLE_PROJECT_REPONAME $CIRCLE_PROJECT_REPONAME=gameye/$CIRCLE_PROJECT_REPONAME:$CIRCLE_TAG

  update-cluster-production-internal:
    environment:
      AWS_DEFAULT_REGION: eu-central-1
      CLUSTER: region-production
    docker: *docker_python
    steps: *update_cluster_steps

workflows:
  version: 2
  main:
    jobs:
      - prepare-npm:
          context: npm-authorized
          filters: &filters_all
            tags:
              only: /.*?/
      - lint: &test_job
          requires: [ prepare-npm ]
          filters: *filters_all
      - spec: *test_job

      - push-image-latest:
          context: docker-authorized
          requires: 
            - lint
            - spec
          filters:
            branches:
              only: master
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/

      - push-image:
          context: docker-authorized
          requires: 
            - lint
            - spec
          filters: &filters_prerelease
            branches:
              ignore: /.*?/
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/

      - update-cluster-region-internal:
          context: aws-authorized
          requires: [ push-image ]
          filters: *filters_prerelease

      - update-cluster-production-internal:
          context: aws-authorized
          requires: [ push-image ]
          filters: &filters_release
            branches:
              ignore: /.*?/
            tags:
              only:
                # v1.0.0
                - /^v\d+\.\d+\.\d$/

